openapi: 3.0.0
info:
  version: "v1"
  title: 'Asgardeo - Organization Management API Definition'
  description: 'This is the RESTful API for organization management in Asgardeo. This API allows users to create, 
  update, retrieve and delete organizations. <br><br>

  <b>Important</b>:<br>
  You need a paid Asgardeo subscription to create hierarchical organizations. If you don't already have one, 
  view the available [subscription plans](https://wso2.com/asgardeo/pricing/) and contact the Asgardeo sales team.
  '
servers:
  - url: 'https://api.asgardeo.io/o/{organization-id}/api/server/v1/organizations'
    variables:
      server-url:
        default: https://api.asgardeo.io/o/{organization-id}
      organization-id:
        default: {organization-id}
security:
  - OAuth2: []
paths:
  /:
    post:
      tags:
        - Organization
      description: "This API is used to create the organization defined in the user input.<br> \n\n <b>Scope required:</b> `internal_organization_create`"
      summary:
        Create a new organization
      operationId: organizationPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPOSTRequest'
        description: This represents the organization to be added.
        required: true
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: Location of the newly created organization.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://api.asgardeo.io/o/{organization-id}/api/server/v1/organizations/' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '{
            "name": "ABC Builders",
            "description": "Building constructions",
            "type": "TENANT",
            "parentId": "b4526d91-a8bf-43d2-8b14-c548cf73065b",
            "attributes": [
              {
                "key": "Country",
                "value": "Sri Lanka"
              }
            ]
            }'          
    get:
      description: "This API is used to search and retrieve organizations created for this organization.<br> \n\n <b>Scope required:</b> `internal_organization_view`"
      summary:
        Retrieve organizations
      operationId: organizationsGet
      parameters:
        - $ref: '#/components/parameters/filterQueryParam'
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/afterQueryParam'
        - $ref: '#/components/parameters/beforeQueryParam'
        - $ref: '#/components/parameters/recursiveQueryParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
        '501':
          $ref: '#/components/responses/NotImplemented'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://api.asgardeo.io/o/{organization-id}/api/server/v1/organizations/?recursive=false' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'          
      tags:
        - Organization

  /{organization-id}:
    get:
      description: "This API is used to get an existing organization identified by the organization ID.<br> \n\n <b>Scope required:</b> `internal_organization_view`"
      summary:
        Get an organization by ID
      parameters:
        - name: organization-id
          in: path
          description: ID of the organization.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/includePermissionsQueryParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://api.asgardeo.io/o/{organization-id}/api/server/v1/organizations/{organization-id}?includePermissions=false' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'          
      tags:
        - Organization
    patch:
      description: "This API provides the capability to update an organization property using patch request. Organization patch is supported only for key-value pairs. \n\n <b>Scope required:</b> `internal_organization_update`"
      summary:
        Patch an organization property by ID
      parameters:
        - name: organization-id
          in: path
          description:  ID of the organization to be patched.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatchRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' \
            'https://api.asgardeo.io/o/{organization-id}/api/server/v1/organizations/{organization-id}' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '[
            {
              "operation": "REPLACE",
              "path": "/name",
              "value": "XYZ Builders"
            }
            ]'          
      tags:
        - Organization
    put:
      description: "This API provides the capability to update an organization by its id. \n\n <b>Scope required:</b> `internal_organization_update`"
      summary:
        Update an organization by ID
      parameters:
        - name: organization-id
          in: path
          description: ID of the organization to be updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPUTRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PUT' \
            'https://api.asgardeo.io/o/{organization-id}/api/server/v1/organizations/{organization-id}' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '{
            "name": "ABC Builders",
            "description": "Building constructions",
            "status": "ACTIVE",
            "attributes": [
              {
                "key": "Country",
                "value": "Sri Lanka"
              }
            ]
            }'         
      tags:
        - Organization
    delete:
      description: "This API provides the capability to delete an organization by giving its ID.<br> \n\n <b>Scope required:</b> `internal_organization_delete`"
      summary:
        Delete an organization by ID
      parameters:
        - name: organization-id
          in: path
          description:  ID of the organization to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'DELETE' \
            'https://api.asgardeo.io/o/{organization-id}/api/server/v1/organizations/{organization-id}' \
            -H 'accept: */*' \
            -H 'Authorization: Bearer {bearer_token}'          
      tags:
        - Organization
components:
  parameters:
    filterQueryParam:
      in: query
      name: filter
      required: false
      description:
        Condition to filter the retrieval of records.
      schema:
        type: string
    limitQueryParam:
      in: query
      name: limit
      required: false
      description:
        Maximum number of records to be returned. (Should be greater than 0)
      schema:
        type: integer
        format: int32
        minimum: 0
    beforeQueryParam:
      in: query
      name: before
      required: false
      description:
        Points to the previous range of data that can be retrieved.
      schema:
        type: string
    afterQueryParam:
      in: query
      name: after
      required: false
      description:
        Points to the next range of data to be returned.
      schema:
        type: string
    recursiveQueryParam:
      in: query
      name: recursive
      required: false
      description:
        Determines whether a recursive search should happen.
      schema:
        type: boolean
        default: false
    showChildrenQueryParam:
      in: query
      name: showChildren
      required: false
      description:
        Returns the organization details along with the child organization IDs belonging to this organization.
      schema:
        type: boolean
        default: false
    includePermissionsQueryParam:
      in: query
      name: includePermissions
      required: false
      description:
        Returns the organization details along with permissions assigned for the requested user in this organization.
      schema:
        type: boolean
        default: false

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: ORG-00000
          description: An error code.
        message:
          type: string
          example: Some Error Message
          description: An error message.
        description:
          type: string
          example: Some Error Description
          description: An error description.
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
          description: An error trace identifier.

    OrganizationPOSTRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "ABC Builders"
        description:
          type: string
          example: "Building constructions"
        type:
          type: string
          example: "TENANT"
          enum:
            - TENANT
            - STRUCTURAL
          default: "TENANT"
        parentId:
          type: string
          example: "b4526d91-a8bf-43d2-8b14-c548cf73065b"
          description: "If the parentId is not present, Super will be taken as the parent organization."
          default: "10084a8d-113f-4211-a0d5-efe36b082211"
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    OrganizationPUTRequest:
      type: object
      required:
        - name
        - status
      properties:
        name:
          type: string
          example: "ABC Builders"
        description:
          type: string
          example: "Building constructions"
        status:
          type: string
          enum: [ACTIVE, DISABLED]
          example: ACTIVE
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    Attribute:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          example: "Country"
        value:
          type: string
          example: "Sri Lanka"
    OrganizationsResponse:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          example:
            [
              {
                "href": "/o/b4526d91-a8bf-43d2-8b14-c548cf73065b/api/server/v1/organizations?limit=10&next=MjAyMS0xMi0yMSAwNToxODozMS4wMDQzNDg=",
                "rel": "next",
              },  {
                "href": "/o/b4526d91-a8bf-43d2-8b14-c548cf73065b/api/server/v1/organizations?limit=10&before=MjAyMS0xMi0yMSAwNToxODozMS4wMDQzNDg=",
                "rel": "previous",
              }
            ]
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/BasicOrganizationResponse'
    Link:
      type: object
      properties:
        href:
          type: string
          format: uri
          description: Endpoint that will return the next or previous page of data.
        rel:
          type: string
          description: Describes whether the provided link is to access the next or previous page of data.
      readOnly: true
    BasicOrganizationResponse:
      type: object
      required:
        - id
        - name
        - status
        - ref
      properties:
        id:
          type: string
          example: '06c1f4e2-3339-44e4-a825-96585e3653b1'
        name:
          type: string
          example: 'ABC Builders'
        status:
          type: string
          enum: [ ACTIVE, DISABLED ]
          example: ACTIVE
        ref:
          type: string
          example: 'o/b4526d91-a8bf-43d2-8b14-c548cf73065b/api/server/v1/organizations/b4526d91-a8bf-43d2-8b14-c548cf73065b'
    OrganizationResponse:
      type: object
      required:
        - id
        - name
        - status
        - created
        - lastModified
        - type
      properties:
        id:
          type: string
          example: '06c1f4e2-3339-44e4-a825-96585e3653b1'
        name:
          type: string
          example: 'ABC Builders'
        description:
          type: string
          example: 'Building constructions'
        status:
          type: string
          enum: [ACTIVE, DISABLED]
          example: ACTIVE
        created:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        lastModified:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        type:
          type: string
          example: "TENANT"
          enum:
            - TENANT
            - STRUCTURAL
        parent:
          $ref: '#/components/schemas/ParentOrganization'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    GetOrganizationResponse:
      type: object
      required:
        - id
        - name
        - status
        - created
        - lastModified
        - type
      properties:
        id:
          type: string
          example: '06c1f4e2-3339-44e4-a825-96585e3653b1'
        name:
          type: string
          example: 'ABC Builders'
        description:
          type: string
          example: 'Building constructions'
        status:
          type: string
          enum: [ACTIVE, DISABLED]
          example: ACTIVE
        created:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        lastModified:
          type: string
          example: '2021-10-25T12:31:53.406Z'
        type:
          type: string
          example: "TENANT"
          enum:
            - TENANT
            - STRUCTURAL
        parent:
          $ref: '#/components/schemas/ParentOrganization'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        permissions:
          type: array
          items:
            type: string
    #-----------------------------------------------------
    # Organization Parent Object
    #-----------------------------------------------------
    ParentOrganization:
      type: object
      required:
        - id
        - ref
      properties:
        id:
          type: string
          example: 'b4526d91-a8bf-43d2-8b14-c548cf73065b'
        ref:
          type: string
          example: 'o/b4526d91-a8bf-43d2-8b14-c548cf73065b/api/server/v1/organizations/b4526d91-a8bf-43d2-8b14-c548cf73065b'

    #-----------------------------------------------------
    # Organization Patch Operation Object
    #-----------------------------------------------------
    OrganizationPatchRequest:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationPatchRequestItem'
    OrganizationPatchRequestItem:
      description: A JSONPatch as defined by RFC 6902. Patch operation is supported only for root level attributes of an organization.
      required:
        - operation
        - path
      properties:
        operation:
          type: string
          description: The operation to be performed.
          enum:
            - ADD
            - REMOVE
            - REPLACE
          example: REPLACE
        path:
          type: string
          description: A JSON-Pointer
          example: '/name'
        value:
          type: string
          description: The value to be used within the operations.
          example: 'XYZ Builders'
  #--------------------------------------------------------
  # Descriptions of Organization Management API responses.
  #--------------------------------------------------------
  responses:
    BadRequest:
      description: Invalid input in the request.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Requested resource is not found.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication information is missing or invalid.
    Forbidden:
      description: Access forbidden.
    ServerError:
      description: Internal server error.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    NotImplemented:
      description: Not Implemented.
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
  #-----------------------------------------------------
  # Applicable authentication mechanisms.
  #-----------------------------------------------------
  securitySchemes:
    OAuth2:
      type: oauth2
      description: "**Authorization code OAuth flow**"
