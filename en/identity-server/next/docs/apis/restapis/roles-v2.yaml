swagger: '2.0'
info:
  version: "2.0.0"
  title: SCIM 2.0 Roles v2 Endpoint Swagger Definition
  description: |
    SCIM 2.0  Roles v2 endpoint
    It is written with [swagger 2](http://swagger.io/).

# The base path of the SCIM2 API.
# If the tenant domain is carbon.super then basepath can be /scim2.
# host: localhost:9443
# basePath: /t/{tenant-domain}/scim2
schemes:
  - https

produces:
  - application/scim+json

# Applicable authentication mechanisms.
security:
  - OAuth2: []
  - BasicAuth: []

paths:
  /v2/Roles:
    get:
      tags:
        - Roles Endpoint
      summary: Filter Roles
      description: |
        This API returns roles according to the specified filter, sort and pagination parameters.

        <b>Scope(Permission) required:</b> `internal_role_mgt_view`
      operationId: getRoleV2
      produces:
        - application/scim+json
      parameters:
        - name: filter
          in: query
          description: Filter expression for filtering
          required: false
          type: string
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          required: false
          type: integer
          format: int32
        - name: count
          in: query
          description: Specifies the desired maximum number of query results per page.
          required: false
          type: integer
          format: int32
        - name: sortBy
          in: query
          description: |-
            Specifies the attribute whose value
            SHALL be used to order the returned responses
          required: false
          type: string
        - name: sortOder
          in: query
          description: The order in which the "sortBy" parameter is applied.
          required: false
          type: string
      responses:
        200:
          description: Valid roles are found
          schema:
            $ref: '#/definitions/RolesListResponseObjectV2'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorForbidden'
        404:
          description: No Role found
          schema:
            $ref: '#/definitions/ErrorNoRoleAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/scim2/v2/Roles' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    post:
      tags:
        - Roles Endpoint
      summary: Create Role
      description: |
        This API creates a role and returns the details of the created role including its unique ID.

        <b>Scope(Permission) required:</b> `internal_role_mgt_create`
      operationId: createRoleV2
      consumes:
        - application/scim+json
      produces:
        - application/scim+json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/RoleCreationObjectV2'
      responses:
        201:
          description: Valid role is created
          schema:
            $ref: '#/definitions/RolePostResponseObjectV2'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorForbidden'
        404:
          description: Role is not found
          schema:
            $ref: '#/definitions/ErrorRoleNotAvailable'
        409:
          description: Role already exist
          schema:
            $ref: '#/definitions/ErroRoleAlreadyAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/scim2/v2/Roles' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
              "schemas": [
                "urn:ietf:params:scim:schemas:extension:2.0:Role"
              ],
              "displayName": "loginRole",
              "audience": {
                "value": "3645709f-ea8d-5595-7690-e1fa0efe3df9",
                "type": "application"
              },
              "users": [
                {
                  "value": "008bba85-451d-414b-87de-c03b5a1f4217"
                }
              ],
              "groups": [
                {
                  "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
                }
              ],
              "permissions": [
                {
                  "value": "internal_login",
                  "display": "Internal Login"
                }
              ]
            }'
      x-codegen-request-body-name: body
  /v2/Roles/.search:
    post:
      tags:
        - Roles Endpoint
      summary: Search Roles
      description: |
        This API returns roles according to the specified filter, sort and pagination parameters.

        <b>Scope(Permission) required:</b> `internal_role_mgt_view`
      operationId: getRolesByPostV2
      consumes:
        - application/scim+json
      produces:
        - application/scim+json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/RoleSearchRequestObjectV2'
      responses:
        200:
          description: Valid roles are found
          schema:
            $ref: '#/definitions/RoleSearchResponseObjectV2'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorForbidden'
        404:
          description: Valid roles are not found
          schema:
            $ref: '#/definitions/RoleSearchErrorResponseObject'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/scim2/v2/Roles/.search' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
            "schemas": [
              "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            ],
            "startIndex": 1,
            "filter": "displayName eq loginRole"
            }'
      x-codegen-request-body-name: body
  /v2/Roles/{id}:
    get:
      tags:
        - Roles Endpoint
      summary: Get Role by ID
      description: |
        This API returns the role details of a particular role using its unique ID.

        <b>Scope(Permission) required:</b> `internal_role_mgt_view`
      operationId: getRolebyIdV2
      produces:
        - application/scim+json
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          required: false
          type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          required: false
          type: string
      responses:
        200:
          description: Valid role is found
          schema:
            $ref: '#/definitions/RoleGetResponseObjectV2'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorForbidden'
        404:
          description: Valid role is not found
          schema:
            $ref: '#/definitions/ErrorNoRoleAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    put:
      tags:
        - Roles Endpoint
      summary: Update Role - PUT
      description: |
        This API updates the role details and returns the updated role details using a PUT operation.

        <b>Scope(Permission) required:</b> `internal_role_mgt_update`
      operationId: updateRoleV2
      consumes:
        - application/scim+json
      produces:
        - application/scim+json
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/RolePutRequestObjectV2'
      responses:
        200:
          description: Role is updated
          schema:
            $ref: '#/definitions/RolePutResponseObjectV2'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/ErrorInvalidInput'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorForbidden'
        404:
          description: Valid role is not found
          schema:
            $ref: '#/definitions/ErrorNoRoleAvailable'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PUT' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
              "displayName": "loginRole",
              "users": [
                {
                  "value": "409ca90b-2ba6-4474-9a45-2cf7376e6e43"
                }
              ],
              "groups": [
                {
                  "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
                }
              ],
              "permissions": [
                {
                  "value": "internal_login",
                  "display": "Internal Login"
                }
              ]
            }'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Roles Endpoint
      summary: Delete Role
      description: |
        This API deletes a particular role using its unique ID.

        <b>Scope(Permission) required:</b> `internal_role_mgt_delete`
      operationId: deleteRoleV2
      produces:
        - application/scim+json
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          type: string
      responses:
        204:
          description: Role is deleted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorForbidden'
        404:
          description: Valid role is not found
          schema:
            $ref: '#/definitions/ErrorNoRoleAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'DELETE' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    patch:
      tags:
        - Roles Endpoint
      summary: Update Role - PATCH
      description: |
        This API updates the role details and returns the updated role details using a PATCH operation.

        <b>Scope(Permission) required:</b> `internal_role_mgt_update`
      operationId: patchRole
      consumes:
        - application/scim+json
      produces:
        - application/scim+json
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/PatchRoleOperationRequestObjectV2'
      responses:
        200:
          description: Role is updated
          schema:
            $ref: '#/definitions/PatchRoleOperationResponseObjectV2'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorUnauthorized'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorForbidden'
        404:
          description: Valid role is not found
          schema:
            $ref: '#/definitions/ErrorNoRoleAvailable'
        406:
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
              "schemas": [
                "urn:ietf:params:scim:api:messages:2.0:PatchOp"
              ],
              "Operations": [
                  {
                    "op": "add",
                    "path": "groups",
                    "value": [
                      {
                        "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
                      }
                    ]
                  },
                  {
                    "op": "add",
                    "path": "users",
                    "value": [
                      {
                        "value": "9cac6a86-1f21-4937-9fb1-5be4a93ef349"
                      }
                    ]
                  },
                  {
                    "op": "remove",
                    "path": "users[value eq 0565f472-28fe-4d93-83ad-096c66ed4a47]"
                  },
                  {
                    "op": "remove",
                    "path": "groups[value eq 9065f445-265e-4rfg3-83ad-666c66ed4a55]"
                  },
                  {
                    "op": "replace",
                    "value": {
                      "permissions": [
                        {
                          "value": "internal_group_mgt_view"
                        }
                    ]
                  }
                }
              ]
            }'
      x-codegen-request-body-name: body
#-----------------------------------------------------
# Security Definitions
#-----------------------------------------------------
securityDefinitions:
  BasicAuth:
    type: basic
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://localhost:9443/oauth/authorize
    tokenUrl: https://localhost:9443/oauth/token
    scopes:
      read: Grants read access
      write: Grants write access
      admin: Grants read and write access to administrative information

#-----------------------------------------------------
# Definitions
#-----------------------------------------------------
definitions:
  #-----------------------------------------------------
  # The Roles List Response Object
  #-----------------------------------------------------
  RolesListResponseObjectV2:
    type: object
    properties:
      totalResults:
        type: integer
        example: 3
      startIndex:
        type: integer
        example: 1
      itemsPerPage:
        type: integer
        example: 3
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      Resources:
        type: array
        items:
          $ref: "#/definitions/RoleObV2"
  #-----------------------------------------------------
  # The Roles Search Request Object
  #-----------------------------------------------------
  RoleSearchRequestObjectV2:
    type: object
    properties:
      schemas:
        type: object
        example:
          - urn:ietf:params:scim:api:messages:2.0:SearchRequest
      startIndex:
        type: integer
        example: 1
      count:
        type: integer
        example: 10
      filter:
        type: string
        example: 'displayName eq loginRole'

  #-----------------------------------------------------
  # The Roles Search Response Object
  #-----------------------------------------------------
  RoleSearchResponseObjectV2:
    type: object
    properties:
      totalResults:
        type: integer
        example: 1
      startIndex:
        type: integer
        example: 1
      itemsPerPage:
        type: integer
        example: 3
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      Resources:
        type: array
        items:
          $ref: "#/definitions/RoleObV2"
  #-----------------------------------------------------
  # The Roles List Response Object
  #-----------------------------------------------------
  RoleObV2:
    type: object
    properties:
      displayName:
        type: string
        example: 'loginRole'
      meta:
        type: object
        properties:
          location:
            type: string
            example: 'https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0'
      id:
        type: string
        example: '4645709c-ea8c-4495-8590-e1fa0efe3de0'
      audience:
        type: object
        properties:
          value:
            type: string
            example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
          display:
            type: string
            example: 'My App'
          type:
            type: string
            example: 'application'
  #-----------------------------------------------------
  # The Role Creation Object
  #-----------------------------------------------------
  RoleCreationObjectV2:
    type: object
    required:
      - displayName
      - schemas
    properties:
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
      displayName:
        type: string
        example: "loginRole"
      audience:
        type: object
        properties:
          value:
            type: string
            example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
          type:
            type: string
            enum: ['applciation', 'organization']
            example: 'application'
      users:
        type: array
        items:
          type: object
          example:
            value: "008bba85-451d-414b-87de-c03b5a1f4217"
      groups:
        type: array
        items:
          type: object
          example:
            value: "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
      permissions:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              example: "internal_login"
            display:
              type: string
              example: "Internal Login"
  #-----------------------------------------------------
  # The Role GET Response Object
  #-----------------------------------------------------
  RoleGetResponseObjectV2:
    type: object
    properties:
      displayName:
        type: string
        example: 'loginRole'
      meta:
        type: object
        properties:
          location:
            type: string
            example: "https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
          resourceType:
            type: string
            example: Role
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
      id:
        type: string
        example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
      audience:
        type: object
        properties:
          value:
            type: string
            example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
          display:
            type: string
            example: 'My App'
          type:
            type: string
            enum: [application, organization]
            example: 'application'
      users:
        type: array
        items:
          type: object
          properties:
            $ref:
              type: string
              example: "https://localhost:9443/scim2/Users/3a12bae9-4386-44be-befd-caf349297f45"
            display:
              type: string
              example: 'kim'
            value:
              type: string
              example: '008bba85-451d-414b-87de-c03b5a1f4217'
      groups:
        type: array
        items:
          type: object
          properties:
            $ref:
              type: string
              example: "https://localhost:9443/scim2/Groups/7bac6a86-1f21-4937-9fb1-5be4a93ef469"
            display:
              type: string
              example: 'PRIMARY/manager'
            value:
              type: string
              example: '7bac6a86-1f21-4937-9fb1-5be4a93ef469'
      permissions:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              example: 'internal_login'
            display:
              type: string
              example: 'Internal Login'
      associatedApplications:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            display:
              type: string
        example:
          - value: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
            display: 'My App'
  #-----------------------------------------------------
  # The Role Post Response Object
  #-----------------------------------------------------
  RolePostResponseObjectV2:
    type: object
    properties:
      displayName:
        type: string
        example: 'loginRole'
      meta:
        type: object
        properties:
          location:
            type: string
            example: "https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
          resourceType:
            type: string
            example: Role
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
      id:
        type: string
        example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
      audience:
        type: object
        properties:
          value:
            type: string
            example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
          display:
            type: string
            example: 'My App'
          type:
            type: string
            enum: [application, organization]
            example: 'application'
  #-----------------------------------------------------
  # The Role PUT request object
  #-----------------------------------------------------
  RolePutRequestObjectV2:
    type: object
    properties:
      displayName:
        type: string
        example: "loginRole"
      users:
        type: array
        items:
          type: object
          example:
            value: '409ca90b-2ba6-4474-9a45-2cf7376e6e43'
      groups:
        type: array
        items:
          type: object
          example:
            value: '7bac6a86-1f21-4937-9fb1-5be4a93ef469'
      permissions:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
              example: 'internal_login'
            display:
              type: string
              example: 'Internal Login'
  #-----------------------------------------------------
  # The Role PUT response object
  #-----------------------------------------------------
  RolePutResponseObjectV2:
    type: object
    properties:
      displayName:
        type: string
        example: 'loginRole'
      meta:
        type: object
        properties:
          location:
            type: string
            example: "https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
          resourceType:
            type: string
            example: Role
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:schemas:extension:2.0:Role"
      id:
        type: string
        example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
      audience:
        type: object
        properties:
          value:
            type: string
            example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
          display:
            type: string
            example: 'My App'
          type:
            type: string
            enum: ['application', 'organization']
            example: 'application'
  #-----------------------------------------------------
  # The Patch Role Operation Input
  #-----------------------------------------------------
  PatchRoleOperationRequestObjectV2:
    type: object
    properties:
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:PatchOp"
      Operations:
        type: array
        items:
          $ref: "#/definitions/RolePatchOperationobjV2"

  #-----------------------------------------------------
  # The Role Patch Operation Object
  #-----------------------------------------------------
  RolePatchOperationobjV2:
    type: object
    properties:
      op:
        type: string
        enum: ["add", "remove", "replace"]
      path:
        type: string
      value:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
    example:
      - op: 'add'
        path: 'groups'
        value:
          - value: '7bac6a86-1f21-4937-9fb1-5be4a93ef469'
      - op: 'add'
        path: 'users'
        value:
          - value: '9cac6a86-1f21-4937-9fb1-5be4a93ef349'
      - op: 'remove'
        path: 'users[value eq 0565f472-28fe-4d93-83ad-096c66ed4a47]'
  #-----------------------------------------------------
  # The Patch Role Operation Output - Role
  #-----------------------------------------------------
  PatchRoleOperationResponseObjectV2:
    type: object
    properties:
      displayName:
        type: string
        example: 'loginRole'
      meta:
        type: object
        properties:
          location:
            type: string
            example: "https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0"
          resourceType:
            type: string
            example: Role
      schemas:
        type: object
        example:
          - urn:ietf:params:scim:schemas:extension:2.0:Role
      id:
        type: string
        example: "4645709c-ea8c-4495-8590-e1fa0efe3de0"
      audience:
        type: object
        properties:
          value:
            type: string
            example: '3645709f-ea8d-5595-7690-e1fa0efe3df9'
          display:
            type: string
            example: 'My App'
          type:
            type: string
            enum: ['application', 'organization']
            example: 'application'
  #-----------------------------------------------------
  # The Error Invalid Input
  #-----------------------------------------------------
  ErrorInvalidInput:
    type : object
    required:
      - status
      - schema
      - detail
    properties:
      status:
        type: string
        example: "400"
      schemas:
        type: string
        example: "urn:ietf:params:scim:api:messages:2.0:Error"
      scimType:
        type: string
        example: "invalidSyntax"
      detail:
        type: string
        example: "Request is unparsable, syntactically incorrect, or violates schema."
  #-----------------------------------------------------
  # The Error Unauthorized
  #-----------------------------------------------------
  ErrorUnauthorized:
    type : object
    required:
      - status
      - schema
    properties:
      status:
        type: string
        example: "401"
      schemas:
        type: string
        example: "urn:ietf:params:scim:api:messages:2.0:Error"
      scimType:
        type: string
        example: "Unauthorized"
  #-----------------------------------------------------
  # The Error NotAcceptable
  #-----------------------------------------------------
  ErrorNotAcceptable:
    type: object
    required:
      - status
      - schema
    properties:
      status:
        type: string
        example: "406"
      schemas:
        type: string
        example: "urn:ietf:params:scim:api:messages:2.0:Error"
      scimType:
        type: string
        example: "Not Acceptable"
    #-----------------------------------------------------
    # The Error Forbidden
    #-----------------------------------------------------
  ErrorForbidden:
    type: object
    required:
      - status
      - schema
    properties:
      status:
        type: string
        example: "403"
      schemas:
        type: string
        example: "urn:ietf:params:scim:api:messages:2.0:Error"
      scimType:
        type: string
        example: "Forbidden"
  #-----------------------------------------------------
  # The Error No roles found
  #-----------------------------------------------------
  ErrorNoRoleAvailable:
    type : object
    required:
      - status
      - schema
      - detail
    properties:
      status:
        type: string
        example: "404"
      schemas:
        type: array
        items:
          type: string
          example: "urn:ietf:params:scim:api:messages:2.0:Error"
      detail:
        type: string
        example: "Role not found in the system."
  #-----------------------------------------------------
  # The Error Role Not Available
  #-----------------------------------------------------
  ErrorRoleNotAvailable:
    type : object
    required:
      - status
      - schema
      - detail
    properties:
      status:
        type: string
        example: "404"
      schemas:
        type: string
        example: "urn:ietf:params:scim:api:messages:2.0:Error"
      detail:
        type: string
        example: "No Role with the id : 4645709c-ea8c-4495-8590-e1fa0efe3de0 in the system."
  #-----------------------------------------------------
  # The Error Role Already Available
  #-----------------------------------------------------
  ErroRoleAlreadyAvailable:
    type : object
    required:
      - status
      - schema
      - detail
    properties:
      status:
        type: string
        example: "409"
      schemas:
        type: string
        example: "urn:ietf:params:scim:api:messages:2.0:Error"
      detail:
        type: string
        example: "Role with name: Internal/loginRole already exists in the system."
  #-----------------------------------------------------
  # The Error No roles found from search
  #-----------------------------------------------------
  RoleSearchErrorResponseObject:
    type: object
    required:
      - totalResults
      - startIndex
      - itemsPerPage
      - schemas
    properties:
      totalResults:
        type: integer
        example: 0
      startIndex:
        type: integer
        example: 1
      itemsPerPage:
        type: integer
        example: 0
      schemas:
        type: array
        items:
          example: "urn:ietf:params:scim:api:messages:2.0:ListResponse"
